@using DataLayer.NotMapped
@using ViewModelsLayer.Goods
@using MusicalShopApp.Common
@using Common
@using static Common.CommonExtensions
@using Microsoft.AspNetCore.Authorization

@{
    ViewBag.Title = Model.Name;
}

@inject IAuthorizationService authorizationService

@model GoodsUnitModel

<article>
    <h3>@Model.Name</h3>
    <section>
        <section>
            <h5>Тип</h5>
            <p>
                <i>@Model.SpecificTypeName</i>
            </p>
        </section>
        <section>
            <h5>Статус</h5>
            <p>
                @(
                    Model.Status switch
                    {
                        // TODO requires refactoring. the best option is to add several languages support
                        GoodsStatus.InStock => "На складе",
                        GoodsStatus.InCart => "В корзине",
                        GoodsStatus.AwaitingDelivery => "Ожидает доставки",
                        GoodsStatus.Sold => "Продано",
                        GoodsStatus.Reserved => "Зарезервировано",
                        GoodsStatus.AwaitingPayment => "Ожидает оплаты",
                        _ => throw new Exception()
                    }
                    )
            </p>
            @if ((Model.Status == GoodsStatus.InStock || Model.Status == GoodsStatus.InCart) && (await authorizationService.AuthorizeAsync(User, nameof(CommonNames.Seller))).Succeeded)
            {
                @await Html.PartialAsync("_AddToCartButton", Model)
            }
        </section>
        @* <section>
            <h5>Год выпуска</h5>
            <p>@Model.ReleaseYear</p>
        </section> *@
        <section>
            <h5>Дата доставки</h5>
            <p>@(Model.ReceiptDate.HumanizeInDetail(HumanizerWrapper.Humanize) ?? "Еще не доставлено")</p>
        </section>
        @* <section>
            <h5>Тип производителя</h5>
            <p>@Model.ManufacturerType</p>
        </section>
        <section>
            <h5>Производитель</h5>
            <p>@Model.Manufacturer</p>
        </section> *@
        <section>
            <h5>Цена</h5>
            <p>@Model.Price.ToMoney()</p>
        </section>
        <section>
            <h5>Описание</h5>
            <p>@Model.Description</p>
        </section>
    </section>
    @if ((await authorizationService.AuthorizeAsync(User, nameof(CommonNames.StockManager))).Succeeded)
    {
        <div>
            <h4>Доставка</h4>
            <iframe id="delivery-iframe" src="@Url.Action("DeliveryUnit", "Stock", new { deliveryId = Model.DeliveryId } )"></iframe>
        </div>
    }
    @if (Model.Sales.Count != 0 && (await authorizationService.AuthorizeAsync(User, nameof(CommonNames.Seller))).Succeeded)
    {
        <div>
            <h4>Продажи</h4>
            Продажи, в которых присутствует данная единица товара
            @await Html.PartialAsync("_SalesList", Model.Sales)
        </div>
    }
</article>

@section Scripts {
    <script src="~/js/goodsList.js"></script>
}