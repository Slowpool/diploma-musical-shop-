@using ViewModelsLayer.Goods
@using Common

@model List<GoodsUnitSearchModel>

@if (Model.Count != 0)
{
    <h3>
        Добавлено товаров: @Model.Count
    </h3>
    await Html.RenderPartialAsync("_PartialGoodsList", Model);
}
<div class="total-cart-price">
    @if (Model.Count == 0)
    {
        <h3>Корзина пуста.</h3>
        <a href="@Url.Action("Search", "Goods")">Заполнить ее.</a>
    }
    else
    {
        <h3>
            Итого к оплате: @(Model.Aggregate(0, (total, dto) => total += dto.Price).ToMoney())
        </h3>
        <form asp-controller="Sales" asp-action="CreateSaleAsNotPaid" method="post">
            <input type="submit" value="Оформить продажу" />
        </form>
        <form asp-controller="Sales" asp-action="CreateSaleAsReserved" method="post">
            <input type="submit" value="Зарезервировать" />
            <input type="text" name="secretWord" maxlength="255" placeholder="Секретное слово" title="Покупатель должен назвать данное слово перед оплатой чтобы доказать, что резервация принадлежит ему"/>
        </form>
    }
</div>

@section Scripts {
    <script src="~/js/goodsList.js"></script>
}